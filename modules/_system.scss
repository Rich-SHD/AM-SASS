// config
// --------------------------------

$am-system: (
  "padding": 1rem,
  "spacing": 1rem,
  "positive-color": #9bd49b,
  "negative-color": #ed9696
) !default;


// response
// --------------------------------

[data-response] {
  position: relative;
  display: block;
  font-size: 1rem;
  padding: map-get($am-system, "padding");
  margin-bottom: map-get($am-system, "spacing");

  // enter animation
  &.ng-enter {
    opacity: 0;
    transition: opacity 300ms;

    &.ng-enter-active {
      opacity: 1;
    }
  }

  // leave animation
  &.ng-leave {
    opacity: 1;
    transition: opacity 300ms;

    &.ng-leave-active {
      opacity: 0;
    }
  }
}


// colors
// --------------------------------

@function am-system-color($color) {
  @if (lightness($color) > 50) {
    @return #111111;
  } @else {
    @return #ffffff;
  }
}

[data-response~="positive"] {
  color: am-system-color(map-get($am-system, "positive-color"));
  background: map-get($am-system, "positive-color");
}

[data-response~="negative"] {
  color: am-system-color(map-get($am-system, "negative-color"));
  background: map-get($am-system, "negative-color");
}


// close
// --------------------------------

[data-response~="close"] {
  padding-right: (map-get($am-system, "padding") * 3);
  
  &::before,
  &::after {
    position: absolute;
    display: block;
    content: "";
    width: map-get($am-system, "padding");
    height: 1px;
    top: 50%;
    right: map-get($am-system, "padding");
    margin-top: (-#{map-get($am-system, "padding")} / 2);
    transform-origin: 50% 50%;
  }
  
  &::before {
    transform: rotate(-45deg);
  }
  
  &::after {
    transform: rotate(45deg);
  }
  
  &[data-response~="positive"] {
    &::before,
    &::after {
      background-color: am-system-color(map-get($am-system, "positive-color"));
    }
  }
  
  &[data-response~="negative"] {
    &::before,
    &::after {
      background-color: am-system-color(map-get($am-system, "negative-color"));
    }
  }
}